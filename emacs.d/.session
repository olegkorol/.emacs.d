;;; Automatically generated on Sun Mar 13 02:28:13 2016
;;; Invoked by Oleg@LY50-WS using 24.5.1
(setq-default kill-ring '(""))
(setq-default session-file-alist '(("~/.emacs.d/#testing.css#" 39 nil 1 nil nil 40 (overwrite-mode)) ("~/.emacs.d/init.el" 5480 5333 1 nil nil 5480 (overwrite-mode)) ("~/.emacs.d/elpa/ac-emmet-20131015.858/ac-emmet-autoloads.el" 1941 nil 1 nil nil 1941 (overwrite-mode)) ("~/.emacs.d/elpa/ac-helm-20140919.917/ac-helm-autoloads.el" 422 nil 1 nil nil 422 (overwrite-mode)) ("~/.emacs.d/elpa/helm-20160307.2253/helm-autoloads.el" 26987 nil 1 nil nil 6223 (overwrite-mode)) ("~/.emacs.d/elpa/helm-core-20160311.2126/helm-core-autoloads.el" 6088 nil 1 nil nil 2249 (overwrite-mode)) ("~/.emacs.d/elpa/ac-html-20151005.31/ac-html-autoloads.el" 1062 nil 1 nil nil 1062 (overwrite-mode)) ("~/.emacs.d/elpa/ac-html-angular-20151224.2319/ac-html-angular-autoloads.el" 563 nil 1 nil nil 563 (overwrite-mode)) ("~/.emacs.d/elpa/ac-html-bootstrap-20160302.901/ac-html-bootstrap-autoloads.el" 883 nil 1 nil nil 883 (overwrite-mode)) ("~/.emacs.d/elpa/ac-html-csswatcher-20151208.1313/ac-html-csswatcher-autoloads.el" 1269 nil 1 nil nil 1269 (overwrite-mode)) ("~/.emacs.d/elpa/web-completion-data-20150623.333/web-completion-data-autoloads.el" 289 nil 1 nil nil 289 (overwrite-mode)) ("~/.emacs.d/elpa/angular-mode-20151201.1327/angular-mode-autoloads.el" 784 nil 1 nil nil 784 (overwrite-mode)) ("~/.emacs.d/elpa/angular-snippets-20140513.2223/angular-snippets-autoloads.el" 636 nil 1 nil nil 636 (overwrite-mode)) ("~/.emacs.d/elpa/auto-auto-indent-20131106.1103/auto-auto-indent-autoloads.el" 1420 nil 1 nil nil 1420 (overwrite-mode)) ("~/.emacs.d/elpa/es-lib-20141111.1030/es-lib-autoloads.el" 2564 nil 1 nil nil 2564 (overwrite-mode)) ("~/.emacs.d/elpa/auto-yasnippet-20160223.308/auto-yasnippet-autoloads.el" 1532 nil 1 nil nil 1532 (overwrite-mode)) ("~/.emacs.d/elpa/docean-20150927.1118/docean-autoloads.el" 1838 nil 1 nil nil 1838 (overwrite-mode)) ("~/.emacs.d/elpa/request-20160108.33/request-autoloads.el" 228 nil 1 nil nil 228 (overwrite-mode)) ("~/.emacs.d/elpa/emmet-mode-20151213.738/emmet-mode-autoloads.el" 1564 nil 1 nil nil 1564 (overwrite-mode)) ("~/.emacs.d/elpa/js2-highlight-vars-20150914.108/js2-highlight-vars-autoloads.el" 495 nil 1 nil nil 495 (overwrite-mode)) ("~/.emacs.d/elpa/js2-refactor-20151029.507/js2-refactor-autoloads.el" 1154 nil 1 nil nil 1154 (overwrite-mode)) ("~/.emacs.d/elpa/yasnippet-20160226.1359/yasnippet-autoloads.el" 1535 nil 1 nil nil 1535 (overwrite-mode)) ("~/.emacs.d/elpa/js3-mode-20150902.949/js3-mode-autoloads.el" 810 nil 1 nil nil 810 (overwrite-mode)) ("~/.emacs.d/custom.el" 1 nil 1 nil nil 1778 (overwrite-mode))))
(setq-default file-name-history '("~/.emacs.d/LICENSE" "/Cygwin-Terminal.ico" "/home/Oleg/.emacs.d/LICENSE" "/home/Oleg/.emacs.d/new.css" "/home/Oleg/.emacs.d/#testing.css#" "/home/Oleg/.emacs.d/testing.js" "/home/Oleg/.emacs.d/testing.css" "/home/Oleg/.emacs.d/testing.html" "~/.emacs.d/init.el" "/home/Oleg/html.html" "/home/Oleg/letstest.js" "~/.emacs.d/elpa/ac-emmet-20131015.858/ac-emmet-autoloads.el" "~/.emacs.d/elpa/ac-helm-20140919.917/ac-helm-autoloads.el" "~/.emacs.d/elpa/helm-20160307.2253/helm-autoloads.el" "~/.emacs.d/elpa/helm-core-20160311.2126/helm-core-autoloads.el" "~/.emacs.d/elpa/ac-html-20151005.31/ac-html-autoloads.el" "~/.emacs.d/elpa/ac-html-angular-20151224.2319/ac-html-angular-autoloads.el" "~/.emacs.d/elpa/ac-html-bootstrap-20160302.901/ac-html-bootstrap-autoloads.el" "~/.emacs.d/elpa/ac-html-csswatcher-20151208.1313/ac-html-csswatcher-autoloads.el" "~/.emacs.d/elpa/web-completion-data-20150623.333/web-completion-data-autoloads.el" "~/.emacs.d/elpa/angular-mode-20151201.1327/angular-mode-autoloads.el" "~/.emacs.d/elpa/angular-snippets-20140513.2223/angular-snippets-autoloads.el" "~/.emacs.d/elpa/auto-auto-indent-20131106.1103/auto-auto-indent-autoloads.el" "~/.emacs.d/elpa/es-lib-20141111.1030/es-lib-autoloads.el" "~/.emacs.d/elpa/auto-yasnippet-20160223.308/auto-yasnippet-autoloads.el" "~/.emacs.d/elpa/docean-20150927.1118/docean-autoloads.el" "~/.emacs.d/elpa/request-20160108.33/request-autoloads.el" "~/.emacs.d/elpa/emmet-mode-20151213.738/emmet-mode-autoloads.el" "~/.emacs.d/elpa/js2-highlight-vars-20150914.108/js2-highlight-vars-autoloads.el" "~/.emacs.d/elpa/js2-refactor-20151029.507/js2-refactor-autoloads.el" "~/.emacs.d/elpa/yasnippet-20160226.1359/yasnippet-autoloads.el" "~/.emacs.d/elpa/js3-mode-20150902.949/js3-mode-autoloads.el" "~/.emacs.d/custom.el" "~/.emacs.d/org-clock-save.el" "/home/Oleg/testing.html" "/home/Oleg/testing.js"))
(setq-default search-ring '("hook" "emmet" "helm" "yasnippet" "yasni" "js2" "npm"))
(setq-default buffer-name-history '("#testing.css#" "testing.html" "init.el" "letstest.js" "*Packages*" "*Custom Themes*" "*Customize Group: Emacs*" "*Customize Group: Faces*" "*Customize Group: Basic Faces*" "testing.js"))
(setq-default command-history '((dired "/cygdrive/c/" nil) (find-file "/Cygwin-Terminal.ico") (find-file "/home/Oleg/.emacs.d/LICENSE") (find-file "/home/Oleg/.emacs.d/new.css") (kill-buffer "#testing.css#") (find-file "/home/Oleg/.emacs.d/#testing.css#") (find-file "/home/Oleg/.emacs.d/testing.js") (find-file "/home/Oleg/.emacs.d/testing.css") (kill-buffer "testing.html") (emmet-expand-yas) (find-file "/home/Oleg/.emacs.d/testing.html") (kill-buffer "init.el") (menu-bar-open) (emmet-mode (quote toggle)) (find-file "/home/Oleg/html.html") (kill-buffer "letstest.js") (find-file "/home/Oleg/letstest.js") (set-fill-column 0) (kill-buffer "*Packages*") (list-packages nil) (customize-themes) (package-menu-mode) (find-file "/home/Oleg/testing.html") (kill-buffer "*Custom Themes*") (kill-buffer "*Customize Group: Emacs*") (kill-buffer "*Customize Group: Faces*") (kill-buffer "*Customize Group: Basic Faces*") (customize) (kill-buffer "testing.js") (find-file "/home/Oleg/testing.js")))
(setq-default extended-command-history '("dired" "emmet-expand-yas" "menu-bar-open" "emmet-mode" "list-packages" "customize-themes" "package-menu-mode" "package-install" "slime-profile-package" "customize" "customize-mode"))
(setq-default helm-source-complex-command-history '((name . "Complex Command History") (candidates closure (t) nil (let* \.\.\. \.\.\. \.\.\.)) (action ("Eval" closure \.\.\. \.\.\. \.\.\. \.\.\.) ("Edit and eval" closure \.\.\. \.\.\. \.\.\.)) (persistent-action . helm-sexp-eval) (filtered-candidate-transformer helm-fuzzy-highlight-matches) (match helm-mm-exact-match helm-mm-match) (header-line . "C-j: helm-sexp-eval (keeping session)") (dont-plug helm-compile-source--multi-match helm-compile-source--persistent-help helm-compile-source--migemo) (matchplugin)))
(setq-default helm-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (action . helm-type-file-actions) (persistent-action . ignore) (filtered-candidate-transformer helm-file-name-history-transformer helm-fuzzy-highlight-matches) (match helm-mm-exact-match helm-mm-match) (header-line . "C-j: ignore (keeping session)") (dont-plug helm-compile-source--multi-match helm-compile-source--persistent-help helm-compile-source--migemo) (matchplugin)))
(setq-default hi-lock-face-history '("hi-yellow" "hi-pink" "hi-green" "hi-blue" "hi-black-b" "hi-blue-b" "hi-red-b" "hi-green-b" "hi-black-hb"))
(setq-default ido-buffer-history '("#testing.css#" "testing.html" "init.el" "letstest.js" "*Packages*" "*Custom Themes*" "*Customize Group: Emacs*" "*Customize Group: Faces*" "*Customize Group: Basic Faces*" "testing.js"))
(setq-default ido-file-history '("." "Cygwin-Terminal.ico" "LICENSE" "new.css" "#testing.css#" "testing.js" "testing.css" "testing.html" "html.html" "letstest.js"))
(setq-default minibuffer-history '("0"))
(setq-default occur-collect-regexp-history '("\\1"))
(setq-default serial-name-history '("COM1"))
(setq-default serial-speed-history '("9600" "1200" "2400" "4800" "14400" "19200" "28800" "38400" "57600" "115200"))
(setq-default slime-connect-host-history '("127.0.0.1"))
(setq-default slime-connect-port-history '("4005"))
(setq-default smex-history '(dired emmet-expand-yas menu-bar-open emmet-mode list-packages customize-themes package-menu-mode))
